$bg_color: #FFF7E0;
$primary_color: #A57F48;
$dark_color: #9b4810;
$check_size: 60px;
$border_base: .5px;

@function sqrt($num: 10) {
  	$x0: 1;
  	$x1: $x0;
  	@for $i from 1 through 10 {
    	$x1: $x0 - ($x0 * $x0 - abs($num)) / (2 * $x0);
    	$x0: $x1;
  	}
  	@return $x1;
}

* {
	position: relative;
	box-sizing: border-box;
	user-select: none;
}

html, body {
	height: 100%;
	margin: 0;
}
body {
	overflow: hidden;
	background: $bg_color;
	color: $primary_color;
	text-align: center;
}
.gamespace {
	margin-top: 50px;
}
.clearfix {
	clear: both;
}
.outter1 {
	display: inline-block;
	margin: 20px 50px;
	padding: $border_base*4;
	border: $border_base*6 solid $primary_color;;
}
.outter2 {
	padding: $border_base*24;
	border: $border_base*2 solid $primary_color;
}
.checkerboard {
	display: table;
	border: $border_base*4 solid $primary_color;
}
// .board {

// }
.river {
	height: $check_size;
	border: $border_base*2 solid $primary_color;
	span {
		font-size: 24px;
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}
}
.check {
	float: left;
	width: $check_size;
	height: $check_size;
	border: $border_base solid $primary_color;
}
.slash::before{
	content: '';
	display: block;
	width: $check_size*2*sqrt($num: 2);
	border-top: $border_base*2 solid $primary_color;
	transform-origin: top left;
	transform: rotate(45deg);
}
.slash::after{
	@extend .slash::before;
	$translate: -$check_size*sqrt($num: 2);
	transform: rotate(135deg) translate($translate, $translate + $border_base);
}
@mixin smallL {
	width: 6px;
	height: 6px;
	margin: $border_base*6;
	position: absolute;
}
.rb {
	@include smallL;
	border-right: $border_base*2 solid $primary_color;
	border-bottom: $border_base*2 solid $primary_color;
	right: 0;
	bottom: 0;
}
.lb {
	@include smallL;
	border-left: $border_base*2 solid $primary_color;
	border-bottom: $border_base*2 solid $primary_color;
	left: 0;
	bottom: 0;
}
.rt {
	@include smallL;
	border-right: $border_base*2 solid $primary_color;
	border-top: $border_base*2 solid $primary_color;
	right: 0;
	top: 0;
}
.lt {
	@include smallL;
	border-left: $border_base*2 solid $primary_color;
	border-top: $border_base*2 solid $primary_color;
	left: 0;
	top: 0;
}
.reverse {
	transform: rotate(180deg) translateY(-$check_size*4);
}
.route {
	z-index: 999;
	position: absolute;
	top: -$check_size/2;
	left: -$check_size/2;
	width: $check_size*9;
}
.spot {
	float: left;
	width: $check_size;
	height: $check_size;
	border-radius: 50%;
}
@mixin chessman($color) {
	display: inline-block;
	$chessman_size: 0.9;
	font-size: $check_size*$chessman_size/2;
	width: $check_size*$chessman_size;
	height: $check_size*$chessman_size;
	margin: $check_size*(1-$chessman_size)/2;
	background-color: $bg_color;
	border-radius: 50%;
	border: $border_base*12 double $color;
	color: $color;
	&:hover {
		// background-color: darken($bg_color, 5%);
		cursor: pointer;
	}
}
.chessman_black {
	@include chessman(#5C8823);
}
.chessman_red {
	@include chessman((#E96C62))
}
.active {
	background-color: darken($bg_color, 2%);
	transform: scale(1.1);
}
.eaten {
	display: inline-block;
	width: $check_size*2;
}
#eaten_red {
	vertical-align: top;
}
.valid_target {
	&::after {
		content: '';
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		width: $check_size*.6;
		height: $check_size*.6;
		background-color: rgba($color: #000000, $alpha: .05);
		border-radius: 50%;
	}
	&:hover {
		cursor: pointer;
	}
}